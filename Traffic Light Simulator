#Project Structure

TrafficLightSimulator/
 ‚î£ Car.java
 ‚î£ TrafficLight.java
 ‚îó Main.java

#Car.java

public class Car {
    private String plateNumber;

    public Car(String plateNumber) {
        this.plateNumber = plateNumber;
    }

    public String getPlateNumber() {
        return plateNumber;
    }

    public void move(String light) {
        switch (light) {
            case "GREEN":
                System.out.println("üöó Car " + plateNumber + " is moving.");
                break;
            case "YELLOW":
                System.out.println("‚ö†Ô∏è Car " + plateNumber + " is slowing down.");
                break;
            case "RED":
                System.out.println("üõë Car " + plateNumber + " is stopped.");
                break;
        }
    }
}

#TrafficLight.java

public class TrafficLight {
    private String[] states = {"RED", "GREEN", "YELLOW"};
    private int currentIndex;

    public TrafficLight() {
        this.currentIndex = 0; // start with RED
    }

    public String getCurrentState() {
        return states[currentIndex];
    }

    public void nextState() {
        currentIndex = (currentIndex + 1) % states.length;
    }

    public void displayLight() {
        System.out.println("\nüö¶ Traffic Light: " + getCurrentState());
    }
}

#Main.java

import java.util.*;

public class Main {
    public static void main(String[] args) throws InterruptedException {
        TrafficLight light = new TrafficLight();

        List<Car> cars = new ArrayList<>();
        cars.add(new Car("KA01AB1234"));
        cars.add(new Car("KA02CD5678"));
        cars.add(new Car("KA03EF1111"));

        // Run simulation for 6 cycles
        for (int i = 0; i < 6; i++) {
            light.displayLight();

            for (Car car : cars) {
                car.move(light.getCurrentState());
            }

            Thread.sleep(1000); // delay 1 sec for realism
            light.nextState();
        }
    }
}

